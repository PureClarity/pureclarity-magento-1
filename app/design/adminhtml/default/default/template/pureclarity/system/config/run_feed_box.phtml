
<!DOCTYPE html>
<html>
    <head>
        <style>
            #pc-outputContainer {margin:20px 0;height:30px;}
            body{
                font-family:helvetica;
                font-size:12px;
            }
            label.disabled{
                color:grey;
            }
        </style>
        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
        <script  type="text/javascript">
         
        $.noConflict();

        jQuery(document).ready(function(){
            // Set vars
            window.pureclarityObj = {
                runFeedUrl: '<?php echo Mage::helper('adminhtml')->getUrl('adminhtml/adminhtml_runfeednow/runselected'); ?>',
                progressFeedUrl: '<?php echo Mage::helper('adminhtml')->getUrl('adminhtml/adminhtml_runfeednow/getprogress'); ?>',
                showImportOption: 'true',
                isComplete: true,
                selectStore: jQuery('#pc-selectStore'),
                runButton: jQuery('#pc-runFeedButton'),
                messageContainer: jQuery('#pc-statusMessage'),
                chkProducts: jQuery('#pc-chkProducts'),
                chkCategories: jQuery('#pc-chkCategories'),
                chkBrands: jQuery('#pc-chkBrands'),
                chkUsers: jQuery('#pc-chkUsers'),
                chkOrders: jQuery('#pc-chkOrders'),
                selectedStore: 0,
                callError:null,
                self:this,

                message: function(message){
                   
                    this.messageContainer.show();
                    this.messageContainer.html("<strong>Status: </strong>" + message);
                },

                progressCheck: function(){
                  
                    if (this.callError){
                        this.message(this.callError);
                        this.isComplete = true;
                        this.resetState();
                    }
                    else {
                        var manageProgressResponse = this.manageProgressResponse.bind(this);
                        jQuery.ajax({
                                url: this.progressFeedUrl,
                                data: {form_key: window.FORM_KEY, storeid: this.selectedStore},
                        }).done(manageProgressResponse)
                        .fail(function(jqXHR, status, err) {
                            console.log(err);
                        self.callError = jqXHR.responseText;
                        });
                    }
                },
            
                runFeed : function(){
                   
                    if (this.isComplete){
                        if (!this.chkProducts.is(':checked') && !this.chkCategories.is(':checked') && !this.chkBrands.is(':checked') && !this.chkUsers.is(':checked') && !this.chkOrders.is(':checked')){
                            this.message("Error: You must select at least one feed type to create.");
                            return;
                        }
                        this.message("Initialising...");
                        this.selectedStore = this.selectStore.find(":selected").val();
                        this.selectStore.prop("disabled", true);
                        this.runButton.prop("disabled", true);
                        this.chkProducts.prop("disabled", true);
                        this.chkCategories.prop("disabled", true);
                        this.chkBrands.prop("disabled", true);
                        this.chkUsers.prop("disabled", true);
                        if (this.showImportOption)
                            this.chkOrders.prop("disabled", true);
                        this.isComplete = false;
                        var urlParts = [this.runFeedUrl + '?storeid='+this.selectedStore];
                        urlParts.push('product='+this.chkProducts.is(':checked'));
                        urlParts.push('category='+this.chkCategories.is(':checked'));
                        urlParts.push('brand='+this.chkBrands.is(':checked'));
                        urlParts.push('user='+this.chkUsers.is(':checked'));
                        if (this.showImportOption)
                            urlParts.push('orders='+this.chkOrders.is(':checked'));
                        var self = this;
                        jQuery.ajax({
                                        url: urlParts.join('&'),
                                        data: {form_key: window.FORM_KEY, storeid: self.selectedStore},
                                    }).done(function(response) {
                                    }).fail(function(jqXHR, status, err) {
                        self.callError = jqXHR.responseText;
                        });
                        var progressCheck = self.progressCheck.bind(self);
                        setTimeout(progressCheck, 1000);
                    }
                },

                manageProgressResponse: function(response){
                    if (response && response.error){
                        this.message("ERROR: Sorry but an error occurred. " + response.error);
                        this.isComplete = true;
                        this.resetState();
                    }
                    else if (response && response.isUploaded){
                        this.message("SUCCESS: Data feed successfully submitted to PureClarity.")
                        this.resetState();
                    }
                    else{
                        if (response && response.isComplete == false){
                            var percent = ((response.cur/response.max) * 100).toFixed(0)
                            var message = "Building " + response.name + " feed... (" + percent + "%)";
                            this.message(message);
                        }
                        else if (response) {
                            this.message('Uploading to PureClarity...');
                        }

                        var progressCheck = this.progressCheck.bind(this);
                        setTimeout(progressCheck, 1000);
                    }
                },
                
                resetState: function(hideMessage){
                    this.isComplete = true;
                    this.selectStore.prop("disabled", false);
                    this.runButton.prop("disabled", false);
                    this.chkProducts.prop("disabled", false);
                    this.chkCategories.prop("disabled", false);
                    this.chkBrands.prop("disabled", false);
                    this.chkUsers.prop("disabled", false);
                    if (this.showImportOption)
                        this.chkOrders.prop("disabled", false);
                }
            };
        });
        </script>
    </head>

    <body>
        
            <h3>Select the store that would like to generate feeds for:</h3>

            <div>
                <select name="pc-selectStore" id="pc-selectStore" class="select admin__controle-select">
                    <?php foreach (Mage::app()->getWebsites() as $website): ?>
                    <?php foreach ($website->getGroups() as $group): ?>
                    <?php foreach ($group->getStores() as $store): ?>
                        <option value="<?php echo $store->getId(); ?>" ><?php echo $group->getName() . " - " . $store->getName() ?></option>
                    <?php endforeach; ?>
                    <?php endforeach; ?>
                    <?php endforeach; ?>
                </select>
            </div>

            <div style="margin:10px 0">
                <div>
                    <input id="pc-chkProducts" type="checkbox" checked="true" /><label>Products</label>
                </div>
                <div>
                    <input id="pc-chkCategories" type="checkbox" checked="true" /><label>Categories</label>
                </div>
                <div>
                    <input id="pc-chkBrands" type="checkbox" checked="true" /><label>Brands</label>
                </div>
                <div>
                    <input id="pc-chkUsers" type="checkbox" checked="true" /><label>Users</label>
                </div>
            </div>

            <div id="orderhistory" style="margin:30px 0">
                <h3>Order History Initialization</h3>
                <h4 style="color:red">This only needs to be run once. Importing your orders helps to initialize PureClarity with the purchasing behavior of your visitors.</h4>
                <div>
                    <input id="pc-chkOrders" type="checkbox" /><label>Import Historic Sales Orders</label>
                </div>
            </div>
            

            <div id="pc-outputContainer">
                <div id="pc-statusMessage" style="display:none"></div>
            </div>

            <div>
                <button id="pc-runFeedButton" onclick="pureclarityObj.runFeed()">Run selected feed generations now</button>
                <!-- <img id="pureclarity_magento_loading_image" class="pureclarity_magento_loading_image pureclarity_magento_loading_image_hidden" src="<?php echo $this->getSkinUrl('images/ajax-loader-tr.gif') ?>" /> -->
            </div>

    </body>

</html>

<?php echo $this->getButtonHtml() ?>